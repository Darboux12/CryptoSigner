import React, { useState, useEffect } from 'react';
import { Container, Row, Col, Table, Badge, Button, Collapse } from 'react-bootstrap';
import { getVulnerabilityScanDetails } from "../api/apiService";
import { useParams } from "react-router-dom";

const VulnerabilityScanResultsPage = () => {
    const { scanId } = useParams();
    const [scanData, setScanData] = useState({
        groupId: '',
        artifactId: '',
        version: '',
        vulnerabilities: [],
    });
    const [open, setOpen] = useState({});

    useEffect(() => {
        const fetchScanDetails = async () => {
            try {
                const data = await getVulnerabilityScanDetails(scanId);
                // Sort the vulnerabilities by CVSS Score in descending order before setting the state
                const sortedVulnerabilities = data.vulnerabilities.sort((a, b) => b.cvssScore - a.cvssScore);
                // Create a new object with the sorted vulnerabilities to set into state
                const sortedData = {
                    ...data,
                    vulnerabilities: sortedVulnerabilities,
                };
                setScanData(sortedData);
            } catch (error) {
                console.error('Error fetching scan details:', error);
            }
        };

        fetchScanDetails();
    }, [scanId]);


    const handleToggle = (cve) => {
        setOpen(prev => ({ ...prev, [cve]: !prev[cve] }));
    };

    const cvssScoreColor = (score) => {
        if (score <= 3.9) return 'success';
        if (score <= 6.9) return 'warning';
        return 'danger';
    };

    return (
        <Container>
            <Row>
                <Col>
                    <h2 className="mt-3 text-light">Maven Dependency Scan Results</h2>
                    <Table striped bordered hover variant="dark" className="mt-3 text-center" style={{ tableLayout: 'fixed' }}>
                        <thead>
                        <tr>
                            <th style={{ width: '20%' }}>GroupId</th>
                            <th style={{ width: '20%' }}>ArtifactId</th>
                            <th style={{ width: '20%' }}>Version</th>
                        </tr>
                        </thead>
                        <tbody>
                        <tr>
                            <td>{scanData.groupId}</td>
                            <td>{scanData.artifactId}</td>
                            <td>{scanData.version}</td>
                        </tr>
                        </tbody>
                    </Table>
                    <h3 className="mt-4 text-light">Detected Vulnerabilities</h3>
                    {Array.isArray(scanData.vulnerabilities) && scanData.vulnerabilities.length > 0 ? (
                        <Table striped bordered hover variant="dark" style={{ tableLayout: 'fixed' }}>
                            <thead>
                            <tr>
                                <th style={{ width: '15%' }}>CVE</th>
                                <th style={{ width: '35%' }}>CVSS Vector</th>
                                <th style={{ width: '10%' }}>CWE</th>
                                <th style={{ width: '30%' }}>Description</th>
                                <th style={{ width: '10%' }}>CVSS Score</th>
                            </tr>
                            </thead>
                            <tbody>
                            {scanData.vulnerabilities.map((vulnerability, index) => (
                                <tr key={index}>
                                    <td style={{ textAlign: 'center' }} className="align-middle"><Badge bg="secondary">{vulnerability.cve}</Badge></td>
                                    <td style={{ textAlign: 'center' }}  className="align-middle"><Badge bg="primary">{vulnerability.cvssVector}</Badge></td>
                                    <td style={{ textAlign: 'center' }}  className="align-middle"><Badge bg="info">{vulnerability.cwe}</Badge></td>
                                    <td className="align-middle">
                                        <Button
                                            variant="outline-info"
                                            size="sm"
                                            onClick={() => handleToggle(vulnerability.cve)}
                                            style={{ display: 'block', margin: '0 auto', marginBottom: '10px' }} // Center the button
                                        >
                                            {open[vulnerability.cve] ? 'Hide' : 'Show'}
                                        </Button>
                                        <Collapse in={open[vulnerability.cve]}>
                                            <div style={{ marginTop: '10px', padding: '0 20px', fontSize: '0.9rem', textAlign: 'justify', maxWidth: '100%', wordWrap: "break-word" }}>
                                                {vulnerability.description}
                                            </div>
                                        </Collapse>
                                    </td>
                                    <td className="align-middle">
                                        <Badge bg={cvssScoreColor(vulnerability.cvssScore)} style={{ width: '75px', display: 'block', margin: '0 auto' }}>
                                            {vulnerability.cvssScore}
                                        </Badge>
                                    </td>
                                </tr>
                            ))}
                            </tbody>
                        </Table>
                    ) : (
                        <p className="text-light">No vulnerabilities found.</p>
                    )}
                </Col>
            </Row>
        </Container>

    );
};

export default VulnerabilityScanResultsPage;
